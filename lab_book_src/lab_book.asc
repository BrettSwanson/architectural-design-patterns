= Architectural Design Patterns
Daniel Hinojosa
:source-highlighter: pygments
:pygments-style: friendly
:icons: font
:imagesdir: ./images
:project-name: advanced_java
:star: *
:starline: *_
:starstar: **
:underscore: _
:toc: left
:backend: revealjs
:customcss: custom.css
:topic: state=title
:icons: font

== Lab 1: ArchUnit

. In the _src/test/java_ directory, and in the `com.jitterted.ebp.blackjack` package create a file called _HexArchTest.java_
. In the file, copy the following content
+
[source, java, subs="attributes,quotes,verbatim"]
----
package com.jitterted.ebp.blackjack;

import com.tngtech.archunit.core.domain.JavaClasses;
import com.tngtech.archunit.core.importer.ClassFileImporter;
import com.tngtech.archunit.lang.ArchRule;
import org.junit.jupiter.api.Test;

import static com.tngtech.archunit.lang.syntax.ArchRuleDefinition.noClasses;

public class HexArchTest {

  @Test
  public void domainMustNotDependOnAdapter() throws Exception {
    JavaClasses importedClasses = 
        new ClassFileImporter().importPackages("com.jitterted.ebp.blackjack");

    ArchRule myRule = noClasses().that().resideInAPackage("..domain..")
                                 .should().dependOnClassesThat()
                                 .resideInAPackage("..adapter..");

    myRule.check(importedClasses);
  }
}
----
+
. Run the test in either your editor, or run it using `mvn test` in the command line.
. Does it violate our architectural rule?

image::stop.png[width="20%", height="20%", align="center"]


== Lab 2: Circuit Breaker


image::stop.png[width="20%", height="20%", align="center"]

== Lab 3: Retry



image::stop.png[width="20%", height="20%", align="center"]

== Lab 4: Bulkhead


image::stop.png[width="20%", height="20%", align="center"]


== Lab 5: Competing Consumers


image::stop.png[width="20%", height="20%", align="center"]

== Lab 6: Claim Check


image::stop.png[width="20%", height="20%", align="center"]

== Lab 7: CQRS


image::stop.png[width="20%", height="20%", align="center"]
